//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("db_companyModel", "tCategoryArticle", "tArticle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tArticle), "tCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tCategory))]
[assembly: EdmRelationshipAttribute("db_companyModel", "tTagsArticle", "tArticle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tArticle), "tTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tTag))]
[assembly: EdmRelationshipAttribute("db_companyModel", "tUserArticle", "tAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tAccount), "tArticle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tArticle))]
[assembly: EdmRelationshipAttribute("db_companyModel", "tUserCollect", "tAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tAccount), "tArticle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DZ.Web.Models.tArticle))]

#endregion

namespace DZ.Web.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class db_companyEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“db_companyEntities”部分中的连接字符串初始化新 db_companyEntities 对象。
        /// </summary>
        public db_companyEntities() : base("name=db_companyEntities", "db_companyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 db_companyEntities 对象。
        /// </summary>
        public db_companyEntities(string connectionString) : base(connectionString, "db_companyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 db_companyEntities 对象。
        /// </summary>
        public db_companyEntities(EntityConnection connection) : base(connection, "db_companyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tAccount> tAccounts
        {
            get
            {
                if ((_tAccounts == null))
                {
                    _tAccounts = base.CreateObjectSet<tAccount>("tAccounts");
                }
                return _tAccounts;
            }
        }
        private ObjectSet<tAccount> _tAccounts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tArticle> tArticles
        {
            get
            {
                if ((_tArticles == null))
                {
                    _tArticles = base.CreateObjectSet<tArticle>("tArticles");
                }
                return _tArticles;
            }
        }
        private ObjectSet<tArticle> _tArticles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tCategory> tCategories
        {
            get
            {
                if ((_tCategories == null))
                {
                    _tCategories = base.CreateObjectSet<tCategory>("tCategories");
                }
                return _tCategories;
            }
        }
        private ObjectSet<tCategory> _tCategories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tTag> tTags
        {
            get
            {
                if ((_tTags == null))
                {
                    _tTags = base.CreateObjectSet<tTag>("tTags");
                }
                return _tTags;
            }
        }
        private ObjectSet<tTag> _tTags;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tUserAvatar> tUserAvatars
        {
            get
            {
                if ((_tUserAvatars == null))
                {
                    _tUserAvatars = base.CreateObjectSet<tUserAvatar>("tUserAvatars");
                }
                return _tUserAvatars;
            }
        }
        private ObjectSet<tUserAvatar> _tUserAvatars;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tUserContact> tUserContacts
        {
            get
            {
                if ((_tUserContacts == null))
                {
                    _tUserContacts = base.CreateObjectSet<tUserContact>("tUserContacts");
                }
                return _tUserContacts;
            }
        }
        private ObjectSet<tUserContact> _tUserContacts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tUserInfo> tUserInfoes
        {
            get
            {
                if ((_tUserInfoes == null))
                {
                    _tUserInfoes = base.CreateObjectSet<tUserInfo>("tUserInfoes");
                }
                return _tUserInfoes;
            }
        }
        private ObjectSet<tUserInfo> _tUserInfoes;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 tAccounts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotAccounts(tAccount tAccount)
        {
            base.AddObject("tAccounts", tAccount);
        }
    
        /// <summary>
        /// 用于向 tArticles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotArticles(tArticle tArticle)
        {
            base.AddObject("tArticles", tArticle);
        }
    
        /// <summary>
        /// 用于向 tCategories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotCategories(tCategory tCategory)
        {
            base.AddObject("tCategories", tCategory);
        }
    
        /// <summary>
        /// 用于向 tTags EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotTags(tTag tTag)
        {
            base.AddObject("tTags", tTag);
        }
    
        /// <summary>
        /// 用于向 tUserAvatars EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotUserAvatars(tUserAvatar tUserAvatar)
        {
            base.AddObject("tUserAvatars", tUserAvatar);
        }
    
        /// <summary>
        /// 用于向 tUserContacts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotUserContacts(tUserContact tUserContact)
        {
            base.AddObject("tUserContacts", tUserContact);
        }
    
        /// <summary>
        /// 用于向 tUserInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotUserInfoes(tUserInfo tUserInfo)
        {
            base.AddObject("tUserInfoes", tUserInfo);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tAccount : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tAccount 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        /// <param name="registerTime">RegisterTime 属性的初始值。</param>
        public static tAccount CreatetAccount(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.String email, global::System.DateTime registerTime)
        {
            tAccount tAccount = new tAccount();
            tAccount.Id = id;
            tAccount.UserName = userName;
            tAccount.Password = password;
            tAccount.Email = email;
            tAccount.RegisterTime = registerTime;
            return tAccount;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegisterTime
        {
            get
            {
                return _RegisterTime;
            }
            set
            {
                OnRegisterTimeChanging(value);
                ReportPropertyChanging("RegisterTime");
                _RegisterTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisterTime");
                OnRegisterTimeChanged();
            }
        }
        private global::System.DateTime _RegisterTime;
        partial void OnRegisterTimeChanging(global::System.DateTime value);
        partial void OnRegisterTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tUserArticle", "tArticle")]
        public EntityCollection<tArticle> tArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tArticle>("db_companyModel.tUserArticle", "tArticle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tArticle>("db_companyModel.tUserArticle", "tArticle", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tUserCollect", "tArticle")]
        public EntityCollection<tArticle> CollectArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tArticle>("db_companyModel.tUserCollect", "tArticle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tArticle>("db_companyModel.tUserCollect", "tArticle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tArticle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tArticle : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tArticle 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="author">Author 属性的初始值。</param>
        /// <param name="body">Body 属性的初始值。</param>
        /// <param name="addTime">AddTime 属性的初始值。</param>
        /// <param name="readCount">ReadCount 属性的初始值。</param>
        /// <param name="upCount">UpCount 属性的初始值。</param>
        /// <param name="downCount">DownCount 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static tArticle CreatetArticle(global::System.Int32 id, global::System.String title, global::System.String author, global::System.String body, global::System.DateTime addTime, global::System.Int32 readCount, global::System.Int32 upCount, global::System.Int32 downCount, global::System.Int32 state)
        {
            tArticle tArticle = new tArticle();
            tArticle.Id = id;
            tArticle.Title = title;
            tArticle.Author = author;
            tArticle.Body = body;
            tArticle.AddTime = addTime;
            tArticle.ReadCount = readCount;
            tArticle.UpCount = upCount;
            tArticle.DownCount = downCount;
            tArticle.State = state;
            return tArticle;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTime
        {
            get
            {
                return _AddTime;
            }
            set
            {
                OnAddTimeChanging(value);
                ReportPropertyChanging("AddTime");
                _AddTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddTime");
                OnAddTimeChanged();
            }
        }
        private global::System.DateTime _AddTime;
        partial void OnAddTimeChanging(global::System.DateTime value);
        partial void OnAddTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReadCount
        {
            get
            {
                return _ReadCount;
            }
            set
            {
                OnReadCountChanging(value);
                ReportPropertyChanging("ReadCount");
                _ReadCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadCount");
                OnReadCountChanged();
            }
        }
        private global::System.Int32 _ReadCount;
        partial void OnReadCountChanging(global::System.Int32 value);
        partial void OnReadCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpCount
        {
            get
            {
                return _UpCount;
            }
            set
            {
                OnUpCountChanging(value);
                ReportPropertyChanging("UpCount");
                _UpCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpCount");
                OnUpCountChanged();
            }
        }
        private global::System.Int32 _UpCount;
        partial void OnUpCountChanging(global::System.Int32 value);
        partial void OnUpCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownCount
        {
            get
            {
                return _DownCount;
            }
            set
            {
                OnDownCountChanging(value);
                ReportPropertyChanging("DownCount");
                _DownCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownCount");
                OnDownCountChanged();
            }
        }
        private global::System.Int32 _DownCount;
        partial void OnDownCountChanging(global::System.Int32 value);
        partial void OnDownCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tCategoryArticle", "tCategory")]
        public EntityCollection<tCategory> tCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tCategory>("db_companyModel.tCategoryArticle", "tCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tCategory>("db_companyModel.tCategoryArticle", "tCategory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tTagsArticle", "tTag")]
        public EntityCollection<tTag> tTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tTag>("db_companyModel.tTagsArticle", "tTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tTag>("db_companyModel.tTagsArticle", "tTag", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tUserArticle", "tAccount")]
        public EntityCollection<tAccount> tAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tAccount>("db_companyModel.tUserArticle", "tAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tAccount>("db_companyModel.tUserArticle", "tAccount", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tUserCollect", "tAccount")]
        public EntityCollection<tAccount> tAccounts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tAccount>("db_companyModel.tUserCollect", "tAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tAccount>("db_companyModel.tUserCollect", "tAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tCategory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tCategory 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="parentId">ParentId 属性的初始值。</param>
        /// <param name="categoryName">CategoryName 属性的初始值。</param>
        /// <param name="categoryPath">CategoryPath 属性的初始值。</param>
        /// <param name="categorySort">CategorySort 属性的初始值。</param>
        public static tCategory CreatetCategory(global::System.Int32 id, global::System.Int32 parentId, global::System.String categoryName, global::System.String categoryPath, global::System.Int32 categorySort)
        {
            tCategory tCategory = new tCategory();
            tCategory.Id = id;
            tCategory.ParentId = parentId;
            tCategory.CategoryName = categoryName;
            tCategory.CategoryPath = categoryPath;
            tCategory.CategorySort = categorySort;
            return tCategory;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryPath
        {
            get
            {
                return _CategoryPath;
            }
            set
            {
                OnCategoryPathChanging(value);
                ReportPropertyChanging("CategoryPath");
                _CategoryPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryPath");
                OnCategoryPathChanged();
            }
        }
        private global::System.String _CategoryPath;
        partial void OnCategoryPathChanging(global::System.String value);
        partial void OnCategoryPathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategorySort
        {
            get
            {
                return _CategorySort;
            }
            set
            {
                OnCategorySortChanging(value);
                ReportPropertyChanging("CategorySort");
                _CategorySort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategorySort");
                OnCategorySortChanged();
            }
        }
        private global::System.Int32 _CategorySort;
        partial void OnCategorySortChanging(global::System.Int32 value);
        partial void OnCategorySortChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tCategoryArticle", "tArticle")]
        public EntityCollection<tArticle> tArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tArticle>("db_companyModel.tCategoryArticle", "tArticle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tArticle>("db_companyModel.tCategoryArticle", "tArticle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tTag : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tTag 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="tagName">TagName 属性的初始值。</param>
        /// <param name="clickCount">ClickCount 属性的初始值。</param>
        public static tTag CreatetTag(global::System.Int32 id, global::System.String tagName, global::System.Int32 clickCount)
        {
            tTag tTag = new tTag();
            tTag.Id = id;
            tTag.TagName = tagName;
            tTag.ClickCount = clickCount;
            return tTag;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClickCount
        {
            get
            {
                return _ClickCount;
            }
            set
            {
                OnClickCountChanging(value);
                ReportPropertyChanging("ClickCount");
                _ClickCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClickCount");
                OnClickCountChanged();
            }
        }
        private global::System.Int32 _ClickCount;
        partial void OnClickCountChanging(global::System.Int32 value);
        partial void OnClickCountChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db_companyModel", "tTagsArticle", "tArticle")]
        public EntityCollection<tArticle> tArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tArticle>("db_companyModel.tTagsArticle", "tArticle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tArticle>("db_companyModel.tTagsArticle", "tArticle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tUserAvatar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tUserAvatar : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tUserAvatar 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="smallAvatar">SmallAvatar 属性的初始值。</param>
        /// <param name="bigAvatar">BigAvatar 属性的初始值。</param>
        public static tUserAvatar CreatetUserAvatar(global::System.Int32 userId, global::System.String smallAvatar, global::System.String bigAvatar)
        {
            tUserAvatar tUserAvatar = new tUserAvatar();
            tUserAvatar.UserId = userId;
            tUserAvatar.SmallAvatar = smallAvatar;
            tUserAvatar.BigAvatar = bigAvatar;
            return tUserAvatar;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SmallAvatar
        {
            get
            {
                return _SmallAvatar;
            }
            set
            {
                OnSmallAvatarChanging(value);
                ReportPropertyChanging("SmallAvatar");
                _SmallAvatar = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SmallAvatar");
                OnSmallAvatarChanged();
            }
        }
        private global::System.String _SmallAvatar;
        partial void OnSmallAvatarChanging(global::System.String value);
        partial void OnSmallAvatarChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BigAvatar
        {
            get
            {
                return _BigAvatar;
            }
            set
            {
                OnBigAvatarChanging(value);
                ReportPropertyChanging("BigAvatar");
                _BigAvatar = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BigAvatar");
                OnBigAvatarChanged();
            }
        }
        private global::System.String _BigAvatar;
        partial void OnBigAvatarChanging(global::System.String value);
        partial void OnBigAvatarChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tUserContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tUserContact : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tUserContact 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        public static tUserContact CreatetUserContact(global::System.Int32 userId)
        {
            tUserContact tUserContact = new tUserContact();
            tUserContact.UserId = userId;
            return tUserContact;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QQ
        {
            get
            {
                return _QQ;
            }
            set
            {
                OnQQChanging(value);
                ReportPropertyChanging("QQ");
                _QQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QQ");
                OnQQChanged();
            }
        }
        private global::System.String _QQ;
        partial void OnQQChanging(global::System.String value);
        partial void OnQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MSN
        {
            get
            {
                return _MSN;
            }
            set
            {
                OnMSNChanging(value);
                ReportPropertyChanging("MSN");
                _MSN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MSN");
                OnMSNChanged();
            }
        }
        private global::System.String _MSN;
        partial void OnMSNChanging(global::System.String value);
        partial void OnMSNChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db_companyModel", Name="tUserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tUserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tUserInfo 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        public static tUserInfo CreatetUserInfo(global::System.Int32 userId)
        {
            tUserInfo tUserInfo = new tUserInfo();
            tUserInfo.UserId = userId;
            return tUserInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RealName
        {
            get
            {
                return _RealName;
            }
            set
            {
                OnRealNameChanging(value);
                ReportPropertyChanging("RealName");
                _RealName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RealName");
                OnRealNameChanged();
            }
        }
        private global::System.String _RealName;
        partial void OnRealNameChanging(global::System.String value);
        partial void OnRealNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
    }

    #endregion
    
}
